{
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "airbnb-base"
  ],
  "settings": {
    "react": {
      "createClass": "createReactClass",
      // Regex for Component Factory to use,
      // default to "createReactClass"
      "pragma": "React",
      // Pragma to use, default to "React"
      "version": "15.0",
      // React version, default to the latest React stable release
      "flowVersion": "0.53"
      // Flow version
    },
    "propWrapperFunctions": [
      "forbidExtraProps"
    ]
    // The names of any functions used to wrap the
    // propTypes object, e.g. `forbidExtraProps`.
    // If this isn't set, any propTypes wrapped in
    // a function will be skipped.
  },
  "plugins": [
    "react"
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "id-length": [
      "error",
      {
        "min": 2,
        "exceptions": [
          "i",
          "j",
          "k",
          "l"
        ]
      }
    ],
    "max-len": [
      1,
      150
    ],
    "indent": [
      "error",
      4,
      {
        "SwitchCase": 1
      }
    ],
    "no-param-reassign": [
      "error",
      {
        "props": false
      }
    ],
    "react/react-in-jsx-scope": "off",
    "no-underscore-dangle": "off",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ]
  }
}
